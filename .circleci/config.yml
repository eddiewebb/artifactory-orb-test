
version: 2.1
orbs:
  artifactory: sandbox/artifactory@volatile

jobs:
  use-commands:
    executor: with-rt-container
    steps:
      # These steps are solely for use in the test project to configure the Artifactory OSS instance used for testing.
      - checkout
      - setup-rt


      # These are the example steps for consuming the orb.
      - artifactory/install
      - artifactory/configure
      - run: echo "not a jar" >> artifact.jar
      - artifactory/upload:
          source: artifact.jar
          target: example-repo-local/my-asset
          build-name: ${CIRCLE_BUILD_NUM}
      - artifactory/build-integration:
          build-name: ${CIRCLE_BUILD_NUM}

workflows:
  version: 2
  test-orb:
    jobs:
      - use-commands
      # cant use job level in testing until we have hosted artiactory, or custom executors
      #- artifactory/upload:
      #    name: Test Upload
      #    source: test/artifact.jar
      #    target: repo/path
      #    build-steps:
      #      - run: mvn install -B
      #    pre-steps:
      #      - setup-rt
      #    executor: with-rt-oss-container


commands:
  setup-rt:
    description: Wait for Artifactory to intialize
    steps:
      - run:
          name: Initialize Artifactory Image
          command: |
            # wait for port availabiluty, otherwise curl errors out immediately
            dockerize -wait tcp://localhost:8081 -timeout 1m
            #wait for artifactory to finish startup stuff
            STATUS="Dont know..."
            while [ "$STATUS" != "OK" ]; do
              echo "Waiting for Artifactory to initialize"
              sleep 2
              STATUS=`curl -uadmin:password  http://localhost:8081/artifactory/api/system/ping 2>/dev/null`
            done
            echo "Artifactory ready!"
            #setup our license
            echo '{"licenseKey":"'${RT_LICENSE_KEY}'"}' > license.json
            curl -s -o /dev/null -w "%{http_code}" \
              -uadmin:password -X POST -d @license.json -H "content-type:application/json" http://localhost:8081/artifactory/api/system/licenses 
            if [ "$HTTPCODE" -ne 200 ];then
              echo "Unable to add license to Artifactory, failing build"
              curl -uadmin:password -X POST -d @license.json http://localhost:8081/artifactory/api/system/licenses
              exit 1
            fi
            echo "License configured"
            curl -uadmin:password http://localhost:8081/artifactory/api/system/licenses
            #setup docker repo...
      - run: |
          echo "export ARTIFACTORY_URL=http://localhost:8081/artifactory" >> $BASH_ENV
      - run: |
          ARTIFACTORY_API_KEY=$(curl -uadmin:password -X POST http://localhost:8081/artifactory/api/security/apiKey | jq -r '.apiKey')
          echo "export ARTIFACTORY_API_KEY=${ARTIFACTORY_API_KEY}" >> $BASH_ENV
          echo "Created API KEy: ${ARTIFACTORY_API_KEY}"
      - run: curl -uadmin:password  http://localhost:8081/artifactory/api/system
      

executors:
  with-rt-container:  
    docker:
      - image: circleci/node:10
      - image: docker.bintray.io/jfrog/artifactory-pro:latest

